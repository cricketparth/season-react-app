{"ast":null,"code":"var _jsxFileName = \"E:\\\\season\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  componenetDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.mesaage\n    }));\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, \" Error: \", this.state.errorMessage, \" \");\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, \"LOADING\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, this.renderContent());\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["E:/season/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","state","lat","errorMessage","componenetDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","mesaage","renderContent","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAG7BC,KAH6B,GAGrB;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KAHqB;AAAA;;AAQjCC,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACIC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,KAAd,CADhB,EAEIC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAACP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAAnB,KAAd,CAFX;AAOH;;AAEDC,EAAAA,aAAa,GAAE;AACV,QAAG,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA1C,EAA+C;AAC/C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAc,KAAKD,KAAL,CAAWE,YAAzB,MAAP;AACE;;AAED,QAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA1C,EAA+C;AAC/C,0BAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACM;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEN;;AACDc,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKD,aAAL,EADJ,CADF;AAKD;;AAnC0B;;AAuCjClB,QAAQ,CAACmB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\n\r\n\r\nclass App extends React.Component{\r\n   \r\n\r\n    state = {lat: null , errorMessage: ''};\r\n\r\n      \r\n\r\n    \r\ncomponenetDidMount(){\r\n    window.navigator.geolocation.getCurrentPosition(\r\n        position => this.setState({lat: position.coords.latitude}),\r\n        err => this.setState({errorMessage: err.mesaage})\r\n        \r\n    );\r\n\r\n\r\n}    \r\n\r\nrenderContent(){\r\n     if(this.state.errorMessage && !this.state.lat) {\r\n     return <div> Error: {this.state.errorMessage} </div> ;\r\n      }\r\n\r\n      if(!this.state.errorMessage && this.state.lat) {\r\n      return <SeasonDisplay lat={this.state.lat} />;\r\n           }\r\n           return <div>LOADING</div>  ;   \r\n          \r\n    }\r\n    render() {\r\n        return (\r\n          <div className=\"border red\">\r\n            { this.renderContent() }\r\n          </div>\r\n        )\r\n      }\r\n} \r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}